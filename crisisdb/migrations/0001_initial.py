# Generated by Django 4.0 on 2022-02-11 12:09

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Citation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Unique Id for this particular citation', primary_key=True, serialize=False)),
                ('page_from', models.IntegerField(blank=True, null=True)),
                ('page_to', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Polity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('start', models.IntegerField(blank=True, null=True)),
                ('end', models.IntegerField(blank=True, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'verbose_name': 'polity',
                'verbose_name_plural': 'polities',
            },
        ),
        migrations.CreateModel(
            name='Reference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Enter a book Genre Please...', max_length=200)),
                ('year', models.IntegerField(blank=True, help_text='year of Publication', null=True)),
                ('creator', models.CharField(help_text='Creator of pub', max_length=100)),
                ('zotero_link', models.CharField(help_text='choose the 8-digit Zotero link', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Subsection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('sect', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subsection', to='crisisdb.section')),
            ],
        ),
        migrations.CreateModel(
            name='Rulertransition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Ruler Transition', max_length=100)),
                ('predecessor', models.CharField(blank=True, max_length=100, null=True)),
                ('successor', models.CharField(blank=True, max_length=100, null=True)),
                ('start_reign_predecessor', models.IntegerField(blank=True, null=True)),
                ('end_reign_transition', models.IntegerField(blank=True, null=True)),
                ('reign_number_predecessor', models.IntegerField(blank=True, null=True)),
                ('contested', models.CharField(blank=True, choices=[('A;P*', 'Absent Present Suspected'), ('A;P', 'Absent Present'), ('U*', 'Unknown'), ('A', 'Absent'), ('P', 'Present'), ('A*', 'Absent Suspected'), ('P*', 'Present Suspected'), ('NFY', 'Not Filled Yet')], max_length=5, null=True)),
                ('overturn', models.CharField(blank=True, choices=[('A;P*', 'Absent Present Suspected'), ('A;P', 'Absent Present'), ('U*', 'Unknown'), ('A', 'Absent'), ('P', 'Present'), ('A*', 'Absent Suspected'), ('P*', 'Present Suspected'), ('NFY', 'Not Filled Yet')], max_length=5, null=True)),
                ('assassination_predecessor', models.CharField(blank=True, choices=[('A;P*', 'Absent Present Suspected'), ('A;P', 'Absent Present'), ('U*', 'Unknown'), ('A', 'Absent'), ('P', 'Present'), ('A*', 'Absent Suspected'), ('P*', 'Present Suspected'), ('NFY', 'Not Filled Yet')], max_length=5, null=True)),
                ('intra_elite', models.CharField(blank=True, choices=[('A;P*', 'Absent Present Suspected'), ('A;P', 'Absent Present'), ('U*', 'Unknown'), ('A', 'Absent'), ('P', 'Present'), ('A*', 'Absent Suspected'), ('P*', 'Present Suspected'), ('NFY', 'Not Filled Yet')], max_length=5, null=True)),
                ('military_revolt', models.CharField(blank=True, choices=[('A;P*', 'Absent Present Suspected'), ('A;P', 'Absent Present'), ('U*', 'Unknown'), ('A', 'Absent'), ('P', 'Present'), ('A*', 'Absent Suspected'), ('P*', 'Present Suspected'), ('NFY', 'Not Filled Yet')], max_length=5, null=True)),
                ('popular_uprising', models.CharField(blank=True, choices=[('A;P*', 'Absent Present Suspected'), ('A;P', 'Absent Present'), ('U*', 'Unknown'), ('A', 'Absent'), ('P', 'Present'), ('A*', 'Absent Suspected'), ('P*', 'Present Suspected'), ('NFY', 'Not Filled Yet')], max_length=5, null=True)),
                ('separatist_rebellion', models.CharField(blank=True, choices=[('A;P*', 'Absent Present Suspected'), ('A;P', 'Absent Present'), ('U*', 'Unknown'), ('A', 'Absent'), ('P', 'Present'), ('A*', 'Absent Suspected'), ('P*', 'Present Suspected'), ('NFY', 'Not Filled Yet')], max_length=5, null=True)),
                ('external_invasion', models.CharField(blank=True, choices=[('A;P*', 'Absent Present Suspected'), ('A;P', 'Absent Present'), ('U*', 'Unknown'), ('A', 'Absent'), ('P', 'Present'), ('A*', 'Absent Suspected'), ('P*', 'Present Suspected'), ('NFY', 'Not Filled Yet')], max_length=5, null=True)),
                ('external_interference', models.CharField(blank=True, choices=[('A;P*', 'Absent Present Suspected'), ('A;P', 'Absent Present'), ('U*', 'Unknown'), ('A', 'Absent'), ('P', 'Present'), ('A*', 'Absent Suspected'), ('P*', 'Present Suspected'), ('NFY', 'Not Filled Yet')], max_length=5, null=True)),
                ('conflict_name', models.CharField(blank=True, max_length=200, null=True)),
                ('transition_label', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.TextField(blank=True, help_text='Add an Optional description or a personal comment above.', null=True)),
                ('finalized', models.BooleanField(default=False)),
                ('tag', models.CharField(blank=True, choices=[('TRS', 'Trusted'), ('DSP', 'Disputed'), ('SSP', 'Suspected'), ('IFR', 'Inferred'), ('UNK', 'Unknown')], max_length=5, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('citations', models.ManyToManyField(blank=True, help_text='Select one or more references for this fact. Hold CTRL to select multiple.', null=True, to='crisisdb.Citation')),
                ('polity', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, to='crisisdb.polity')),
            ],
            options={
                'verbose_name': 'ruler transition',
                'verbose_name_plural': 'ruler transitions',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('polity', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='crisisdb.polity')),
            ],
            options={
                'verbose_name': 'country',
                'verbose_name_plural': 'countries',
            },
        ),
        migrations.AddField(
            model_name='citation',
            name='ref',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='citation', to='crisisdb.reference'),
        ),
        migrations.CreateModel(
            name='Agr_Productivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Agricultural productivity', max_length=100)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('total_amount_of_grain_yield', models.IntegerField(blank=True, help_text='Total amount of grain yield (in 1,000 catties), 1 catty = 1.1 pounds', null=True)),
                ('total_size_of_grain_land', models.IntegerField(blank=True, help_text='Total size of grain land (1,000 mu)', null=True)),
                ('total_number_of_farmers', models.IntegerField(blank=True, help_text='Total number of farmers (1,000)', null=True)),
                ('grain_yield_per_mu', models.IntegerField(blank=True, help_text='Grain yield per mu', null=True)),
                ('grain_yield_per_farmer', models.IntegerField(blank=True, help_text='Grain yield per farmer (catty), 1 catty = 1.1 pounds', null=True)),
                ('grain_number_per_farmer', models.IntegerField(blank=True, help_text='Grain number per farmer (number of mouths fed)\tNotes', null=True)),
                ('description', models.TextField(blank=True, help_text='Add an Optional description or a personal comment above.', null=True)),
                ('polity', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='crisisdb.polity')),
                ('section', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='crisisdb.section')),
            ],
        ),
        migrations.CreateModel(
            name='Agr_Prod_Pop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Agricultural production and population', max_length=100)),
                ('year_from', models.IntegerField(blank=True, null=True)),
                ('year_to', models.IntegerField(blank=True, null=True)),
                ('total_population', models.IntegerField(blank=True, null=True)),
                ('arable_land_per_capita', models.DecimalField(blank=True, decimal_places=2, help_text='Arable Land per capita (mu)', max_digits=7, null=True)),
                ('description', models.TextField(blank=True, help_text='Add an Optional description or a personal comment above.', null=True)),
                ('finalized', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('tag', models.CharField(blank=True, choices=[('TRS', 'Trusted'), ('DSP', 'Disputed'), ('SSP', 'Suspected'), ('IFR', 'Inferred'), ('UNK', 'Unknown')], max_length=5, null=True)),
                ('citations', models.ManyToManyField(blank=True, help_text='Select one or more references for this fact. Hold CTRL to select multiple.', null=True, to='crisisdb.Citation')),
                ('polity', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='crisisdb.polity')),
                ('section', models.ForeignKey(default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crisisdb.section')),
                ('subsection', models.ForeignKey(default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crisisdb.subsection')),
            ],
            options={
                'verbose_name': 'Agricultural production and population',
                'verbose_name_plural': 'Agricultural production and populations',
            },
        ),
        migrations.CreateModel(
            name='Agr_Prod_Per_Pop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Agricultural production per population', max_length=100)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('total_population', models.IntegerField(blank=True, help_text='Total Population (1,000)', null=True)),
                ('agricultural_population', models.IntegerField(blank=True, help_text='Agricultural population (1,000)', null=True)),
                ('arable_land', models.IntegerField(blank=True, help_text='Arable land (1,000 mu)', null=True)),
                ('arable_land_per_farmer', models.DecimalField(blank=True, decimal_places=2, help_text='Arable land per farmer(mu)', max_digits=7, null=True)),
                ('gross_grain_shared_per_agricultural_population', models.IntegerField(blank=True, help_text='Gross grain shared per agricultural population (catties per capita),1 catty = 1.1 pounds', null=True)),
                ('net_grain_shared_per_agricultural_population', models.IntegerField(blank=True, help_text='Net grain shared per agricultural population (catties per capita), 1 catty = 1.1 pounds', null=True)),
                ('Surplus', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, help_text='Add an Optional description or a personal comment above.', null=True)),
                ('polity', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='crisisdb.polity')),
                ('section', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='crisisdb.section')),
            ],
        ),
    ]
